---
cache:
  - ccache
#cache:
#  directories:
#    - "${TRAVIS_BUILD_DIR}/deps/rocksdb"
#    - "${TRAVIS_BUILD_DIR}/deps/msgpack-c"

language: cpp
os:
  - linux
#  - osx
compiler:
  - gcc
#  - clang
branches:
  only:
    - feature/ci-cd
    - master
    - develop
notifications:
  email: false

addons:
  apt:
    update: true
    sources:
      - sourceline: 'ppa:mhier/libboost-latest'
      - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
        key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
      - sourceline: 'ppa:ubuntu-toolchain-r/test'
    packages: &precise_latest_boost_packages
      - cmake
      - gcc-9
      - g++-9
  homebrew:
    update: true
    packages:
      - boost
      - boost-python
      - boost-python3
      - ccache
      - gflags
      - lz4
      - snappy
      - xz
      - zstd
      - crc32c
      - gcc@9
jobs:
  include:
    - os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
        - LABEL="linux"
        - _DEPLOYABLE="true"
        - STRIP="strip"
        - CMAKE_ROOT=${TRAVIS_BUILD_DIR}/deps/cmake
#travis_retry
#    ## OSX, g++-8
#    - os: osx
#      osx_image: xcode10
#      compiler: gcc
#      env:
#        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
#        - LABEL="osx"
#        - _DEPLOYABLE="true"
#        - STRIP="strip"

#    # Ubuntu, g++-7
#    - os: linux
#      compiler: gcc
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - libboost1.55-all-dev
#            - g++-7
#            - gcc-7
#      env:
#        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
#        - LABEL="linux-g++-7"
#        - STRIP="strip"

#    # OSX, clang
#    - os: osx
#      osx_image: xcode10
#      compiler: clang
#      env:
#        - MATRIX_EVAL="CC=clang && CXX=clang++"
#        - LABEL="osx-clang"
#        - STRIP="strip"


before_install:
  - if [ "$CXX" = "g++" ]; then export CXX="g++-9" CC="gcc-9"; fi
  - sudo apt-get install libao-dev
  - sudo apt-get install libcurl4-openssl-dev
  - sudo apt-get install -y g++-8; CC=gcc-8 && CXX=g++-8;
  - chmod +x linux_pkg_install.sh
  - export PORTABLE=1
  - export USE_RTTI=1
  - ./linux_pkg_install.sh

install:
  - export PORTABLE=1
  - export USE_RTTI=1
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - sudo apt-get install libgtest-dev
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
    export PATH="$(brew --prefix llvm)/bin:$PATH";
    fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-9" CC="gcc-9"; fi
  - cd ${TRAVIS_BUILD_DIR}
  - if [[ "${LABEL:0:3}" == "osx" ]]; then brew cask uninstall --force oclint || true ; fi
  - if [[ "$LABEL" == "osx" ]]; then brew install gcc@8 ; fi
  - if [[ "$LABEL" == "osx-g++-7" ]]; then brew install gcc@7 ; fi

script:
  - eval $MATRIX_EVAL
  - mkdir build && cd build
  - ${DEPS_DIR}/cmake/bin/cmake -DCMAKE_BUILD_TYPE=Release .. ${CUSTOM_TOOLCHAIN} ${CUSTOM_BOOST_ROOT}
#  - make failless-server -j4
  - make failless-cli -j4

after_success:
  - echo 'success'
